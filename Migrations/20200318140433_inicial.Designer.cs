// <auto-generated />
using System;
using Carrinho.Dados;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace Carrinho.Migrations
{
    [DbContext(typeof(CarrinhoContext))]
    [Migration("20200318140433_inicial")]
    partial class inicial
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.2");

            modelBuilder.Entity("Carrinho.Models.CarrinhoCompras", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("EstadoCompra")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("vendas");
                });

            modelBuilder.Entity("Carrinho.Models.CarrinhoProdutos", b =>
                {
                    b.Property<int>("CarrinhoId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("ProdutoId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("QtdProduto")
                        .HasColumnType("INTEGER");

                    b.HasKey("CarrinhoId", "ProdutoId");

                    b.HasIndex("ProdutoId");

                    b.ToTable("vendas_produtos");
                });

            modelBuilder.Entity("Carrinho.Models.Produto", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("Id")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Descricao")
                        .HasColumnName("Descricao")
                        .HasColumnType("TEXT");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnName("Nome")
                        .HasColumnType("TEXT");

                    b.Property<decimal>("Preco")
                        .HasColumnName("Preco")
                        .HasColumnType("numeric(10,5)");

                    b.Property<int?>("SetorId")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("SetorId");

                    b.ToTable("produtos");
                });

            modelBuilder.Entity("Carrinho.Models.Setor", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("Id")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Nome")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("setores");
                });

            modelBuilder.Entity("Carrinho.Models.CarrinhoProdutos", b =>
                {
                    b.HasOne("Carrinho.Models.Produto", "Produto")
                        .WithMany("Carrinhos")
                        .HasForeignKey("CarrinhoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Carrinho.Models.CarrinhoCompras", "Carrinho")
                        .WithMany("ListaProdutos")
                        .HasForeignKey("ProdutoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Carrinho.Models.Produto", b =>
                {
                    b.HasOne("Carrinho.Models.Setor", "Setor")
                        .WithMany("Produtos")
                        .HasForeignKey("SetorId")
                        .OnDelete(DeleteBehavior.Cascade);
                });
#pragma warning restore 612, 618
        }
    }
}
